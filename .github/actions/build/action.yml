name: "Build app"
inputs:
  with-package:
    description: "Enable or disable packaging"
    required: true
    default: true
  qt-version:
    description: "Qt version"
    default: "5.15.2"
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5
      with:
          python-version: '3.12' 
    - name: Install Qt
      shell: bash
      run: |
        set -o xtrace

        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-focal
          sudo apt-get update
          sudo apt-get install -y build-essential qt515base qt515declarative
          echo "PATH=/opt/qt515/bin:$PATH" >> $GITHUB_ENV
        else
          python3 -m venv .venv
          source .venv/bin/activate
          pip install pyzstd
          pip install setuptools wheel
          pip install py7zr==0.16.1
          # pip install aqtinstall==1.2.5
          # aqt install ${{ inputs.qt-version }} mac desktop -m qtdeclarative -O $RUNNER_WORKSPACE/Qt
          brew install qt@5
          brew link qt5 --force
          echo "PATH=$(brew --prefix qt@5)/bin:$PATH" >> $GITHUB_ENV
          # ls -la $RUNNER_WORKSPACE/Qt/${{ inputs.qt-version }}/clang_64/bin
          # echo "PATH=$RUNNER_WORKSPACE/Qt/${{ inputs.qt-version }}/clang_64/bin:$PATH" >> $GITHUB_ENV
        fi

    - name: Install linuxdeployqt (Linux only)
      shell: bash
      run: |
        set -o xtrace

        if [[ "$RUNNER_OS" == "Linux" ]]; then
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          sudo mv linuxdeployqt-continuous-x86_64.AppImage /usr/bin/linuxdeployqt
          sudo chmod a+x /usr/bin/linuxdeployqt
        fi

    - run: qmake -config release 2>&1 | cat
      shell: bash

    - run: make clean
      shell: bash

    - run: make
      shell: bash

    - name: Create package
      shell: bash
      run: |
        set -o xtrace

        if [[ ${{inputs.with-package}} ]]; then
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            mkdir dist/appdir
            mv dist/qml-parser dist/appdir
            linuxdeployqt dist/appdir/qml-parser -no-plugins -no-copy-copyright-files --no-compiler-runtime --no-translations 
            mv dist/appdir/* dist
            rmdir dist/appdir
          else
            macdeployqt dist/qml-parser.app -no-plugins --no-compiler-runtime --no-translations  -verbose=1
          fi
        fi

    - uses: actions/upload-artifact@v4
      with:
        name: qml-parser
        path: dist\
